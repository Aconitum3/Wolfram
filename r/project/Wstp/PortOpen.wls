#!/usr/bin/env wolframscript
s=SocketOpen["0.0.0.0:9003","ZMQ_PAIR"]
processData[dataByteArray_,sourceSocket_]:=Module[{dataString,jsonWrite},\[IndentingNewLine]If[!ByteArrayQ[dataByteArray],Print["ByteArray Error"];];\[IndentingNewLine]Print[dataByteArray];\[IndentingNewLine]dataString=ByteArrayToString@dataByteArray[[40;;]];\[IndentingNewLine]Print[dataString];\[IndentingNewLine]eval = ToExpression[dataString];\[IndentingNewLine]Print[eval];\[IndentingNewLine]jsonWrite = Quiet[Developer`WriteRawJSONString[<|"Output"->eval|>,"ConversionRules"->{_Missing|None->Null},"Compact"->True]];\[IndentingNewLine]If[FailureQ[eval],jsonWrite=Developer`WriteRawJSONString[<|"Output"->"Evaluation Failed"|>,"ConversionRules"->{_Missing|None->Null},"Compact"->True]];If[FailureQ[jsonWrite],jsonWrite=Developer`WriteRawJSONString[<|"Output"->"Conversion Failed"|>,"ConversionRules"->{_Missing|None->Null},"Compact"->True]];\[IndentingNewLine]BinaryWrite[sourceSocket,StringToByteArray[jsonWrite]]\[IndentingNewLine]] 
SocketListen[s,processData[#DataByteArray,#SourceSocket]&,HandlerFunctionsKeys->{"DataByteArray","SourceSocket"}] 